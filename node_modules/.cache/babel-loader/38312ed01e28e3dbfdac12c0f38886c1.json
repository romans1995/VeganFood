{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\Code\\\\MyOrder\\\\src\\\\store\\\\CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport { useReducer } from \"react\";\nimport CartContext from \"./cart-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defualtCartState = {\n  items: [],\n  totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === 'ADD') {\n    const updatedTotalAmount = state.totalamount + action.item.price * action.item.amount;\n    const existingCartItemIndex = state.items.findIndex(item => item.id === action.item.id);\n    const existingCartItem = state.items[existingCartItemIndex];\n    let updatedItems;\n    let updatedItem;\n\n    if (existingCartItem) {\n      updatedItem = { ...existingCartItem,\n        amount: existingCartItem.amount + action.item.amount\n      };\n      updatedItems = [...state.items];\n      updatedItems[existingCartItemIndex] = updatedItem;\n    } else {\n      updatedItem = { ...action.item\n      };\n      updatedItems = state.items.concat(updatedItem);\n    }\n\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n\n  if (action.type === 'REMOVE') {\n    const existingCartItemIndex = state.items.findIndex(item => item.id === action.id);\n    const existingItem = state.items[existingCartItemIndex];\n    const updatedTotalAmount = state.totalAmount - existingItem.price;\n    let updatedItems;\n\n    if (existingItem.amount === 1) {\n      updatedItems = state.items.filter(item => item.id !== action.id);\n    } else {\n      const updatedItem = { ...existingItem,\n        amount: existingItem.amount - 1\n      };\n      updatedItems = [...state.items];\n      updatedItems[existingCartItemIndex] = updatedItem;\n    }\n\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n\n  ;\n  return defualtCartState;\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defualtCartState);\n\n  const addItemtoCartHandler = item => {\n    dispatchCartAction({\n      type: 'ADD',\n      item: item\n    });\n  };\n\n  const removeItemFromCartHandler = id => {\n    dispatchCartAction({\n      type: 'REMOVE',\n      id: id\n    });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemtoCartHandler,\n    removeItem: removeItemFromCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 8\n  }, this);\n};\n\n_s(CartProvider, \"zIl0cO4Y8q8tAd5M6XkKu6YILUk=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["C:/Users/user/Desktop/Code/MyOrder/src/store/CartProvider.js"],"names":["useReducer","CartContext","defualtCartState","items","totalAmount","cartReducer","state","action","type","updatedTotalAmount","totalamount","item","price","amount","existingCartItemIndex","findIndex","id","existingCartItem","updatedItems","updatedItem","concat","existingItem","filter","CartProvider","props","cartState","dispatchCartAction","addItemtoCartHandler","removeItemFromCartHandler","cartContext","addItem","removeItem","children"],"mappings":"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","sourcesContent":["import { useReducer } from \"react\";\r\n\r\nimport CartContext from \"./cart-context\";\r\n\r\n\r\nconst defualtCartState = {\r\n    items:[],\r\n    totalAmount:0\r\n};\r\nconst cartReducer = (state,action) =>{\r\n    if(action.type === 'ADD') {\r\n        \r\n        const updatedTotalAmount = state.totalamount + action.item.price * action.item.amount;\r\n        const existingCartItemIndex = state.items.findIndex(item => item.id === action.item.id);\r\n        const existingCartItem = state.items[existingCartItemIndex];\r\n        let updatedItems;\r\n        let updatedItem;\r\n\r\n        if(existingCartItem){\r\n        \r\n            updatedItem = {\r\n                ...existingCartItem,\r\n                amount: existingCartItem.amount + action.item.amount\r\n};\r\n            updatedItems = [...state.items];\r\n            updatedItems[existingCartItemIndex] = updatedItem;\r\n        }else {\r\n            updatedItem = {...action.item};\r\n            updatedItems = state.items.concat(updatedItem)\r\n        }\r\n\r\n    \r\n        return {\r\n            items:updatedItems,\r\n            totalAmount:updatedTotalAmount\r\n        };\r\n    }\r\n    if(action.type ==='REMOVE'){\r\n        const existingCartItemIndex = state.items.findIndex(item => item.id === action.id);\r\n        \r\n        const existingItem = state.items[existingCartItemIndex];\r\n        const updatedTotalAmount = state.totalAmount - existingItem.price;\r\n        let updatedItems;\r\n        if(existingItem.amount === 1){\r\n           updatedItems = state.items.filter(item => item.id !== action.id)\r\n    }else{\r\n        const updatedItem = {...existingItem,amount:existingItem.amount -1 };\r\n        updatedItems = [...state.items];\r\n        updatedItems[existingCartItemIndex] = updatedItem;\r\n    }\r\n    return {\r\n        items:updatedItems,\r\n        totalAmount:updatedTotalAmount\r\n    };\r\n};\r\n   \r\n    return defualtCartState\r\n};\r\nconst CartProvider = props => {\r\n    const [cartState,dispatchCartAction] = useReducer(cartReducer,defualtCartState);\r\n\r\n    const addItemtoCartHandler = item => {\r\n        dispatchCartAction({type:'ADD',item:item});\r\n    };\r\n    const removeItemFromCartHandler = id =>{\r\n        dispatchCartAction({type:'REMOVE',id:id})\r\n    };\r\n    const cartContext = {\r\n        items:cartState.items,\r\n        totalAmount:cartState.totalAmount,\r\n        addItem: addItemtoCartHandler ,\r\n        removeItem: removeItemFromCartHandler\r\n    }\r\nreturn <CartContext.Provider value = {cartContext}>\r\n    {props.children}\r\n</CartContext.Provider>\r\n};\r\n\r\nexport default CartProvider;"]},"metadata":{},"sourceType":"module"}